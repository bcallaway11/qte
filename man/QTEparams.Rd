% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/QTEparams.R
\name{QTEparams}
\alias{QTEparams}
\title{QTEparams}
\usage{
QTEparams(formla, xformla = NULL, t = NULL, tmin1 = NULL, tmin2 = NULL,
  tname = NULL, data, panel = FALSE, w = NULL, idname = NULL, probs,
  alp = NULL, method = NULL, plot = NULL, se = NULL, iters = NULL,
  retEachIter = NULL, bootstrapiter = NULL, seedvec = NULL, pl = NULL,
  cores = NULL)
}
\arguments{
\item{formla}{Should be some y on treatment variable}

\item{xformla}{a formula for the other covariates such as ~ x1 + x2}

\item{t}{The last period (not always used)}

\item{tmin1}{The last pre-treatment period (not always used)}

\item{tmin2}{The 2nd to last pre-treatment period (not always used)}

\item{tname}{The name of the column containing time periods (not always used)}

\item{data}{The name of the data frame}

\item{panel}{Whether or not the data is panel}

\item{w}{Additional (usually sampling) weights}

\item{idname}{The name of the id column used with panel data (not always used)}

\item{probs}{Which quantiles to produce quantile treatment effects for}

\item{alp}{The significance level}

\item{method}{The method to compute the propensity score}

\item{plot}{boolean for whether or not to plot qtes}

\item{se}{boolean whether or not to compute standard errors}

\item{iters}{The number of bootstrap iterations to use to compute standard errors}

\item{retEachIter}{boolean whether or not to return the full results from
each bootstrap iteration}

\item{bootstrapiter}{Used internally for determining whether or not
a call is part of computing standard errors via the bootstrap}

\item{seedvec}{A seed to compute the same bootstrap standard errors each
time the method is called (not always used)}

\item{pl}{Boolean for whether or not computing bootstrap standard errrors
in parallel}

\item{cores}{The number of cores to use if computing standard errors in
in parallel}
}
\description{
\code{QTEparams} is an object that contains all the
 parameters passed to QTE methods
}
